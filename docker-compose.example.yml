version: '3'

networks: 
    default:

services: 
    python:
        container_name: app-python
        build:
            context: ./python
        volumes: 
            - ./python:/app:delegated
            - static:/app/static_cdn
            - media:/app/media_cdn
        depends_on: 
            - mysql
        expose: 
            - 8080
        command: bash -c "python manage.py runserver 0.0.0.0:8080" # For production - python manage.py collectstatic --no-input && python manage.py makemigrations && python manage.py migrate && gunicorn --workers=3 app.wsgi -b 0.0.0.0:8080"
        networks:
            - default  
    nginx:
        container_name: app-nginx
        image: nginx:stable-alpine
        ports:
            - 127.0.0.1:80:80
            - 127.0.0.1:443:443   
        volumes: 
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./python/logs/:/app/logs
            - static:/app/static_cdn
            - media:/app/media_cdn       
        depends_on: 
            - python
            - mysql
        networks:
            - default  
    mysql:
        container_name: app-mysql
        image: mysql:5.7.27
        restart: unless-stopped
        ports:
            - 127.0.0.1:3306:3306
        volumes:
            - mysql:/var/lib/mysql:delegated
        environment:
            MYSQL_HOST: localhost
            MYSQL_DATABASE: "django-twitter"
            MYSQL_USER: "django-twitter"
            MYSQL_PASSWORD: "django-twitter"
            MYSQL_ROOT_PASSWORD: "django-twitter"
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - default
volumes: 
    media:
    static:  
    mysql: